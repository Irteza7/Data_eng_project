version: '3.4'
services:
  zookeeper:
    image: zookeeper
    ports:
      - 2181:2181
    container_name: zookeeper

  kafka:
    image: bitnami/kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.0.228
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: weather:1:1
      ALLOW_PLAINTEXT_LISTENER: yes
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./services/kafka:/kafka/data
    depends_on:
      - zookeeper
    container_name: kafka

  postgres:
    image: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./services/data/pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    env_file:
      - .env
    container_name: postgres-container

  metabase:
    image: metabase/metabase
    ports: 
      - 3000:3000
    depends_on:
      - postgres
    environment:
      - MB_DB_TYPE=postgres
      - MB_DB_DBNAME=metabase
      - MB_DB_PORT=5432
      - MB_DB_USER=${POSTGRES_USER}
      - MB_DB_PASS=${POSTGRES_PASSWORD}
      - MB_DB_HOST=postgres
    container_name: metabase

  scheduler:
    build: .
    user: "${AIRFLOW_UID}:0"
    env_file: 
      - .env
    volumes:
      - ./services/airflow/dags:/opt/airflow/dags
      - ./services/airflow/logs:/opt/airflow/logs
      - ./services/airflow/plugins:/opt/airflow/plugins
      - ./weather_project:/opt/airflow/weather_project
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - postgres
      - airflow-init
    container_name: airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "8793:8793"

  webserver:
    build: .
    user: "${AIRFLOW_UID}:0"
    env_file: 
      - .env
    volumes:
      - ./services/airflow/dags:/opt/airflow/dags
      - ./services/airflow/logs:/opt/airflow/logs
      - ./services/airflow/plugins:/opt/airflow/plugins
      - ./weather_project:/opt/airflow/weather_project
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - postgres
      - airflow-init
    container_name: airflow-webserver
    restart: always
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 5

  airflow-init:
    build: .
    user: "${AIRFLOW_UID}:0"
    env_file: 
      - .env
    volumes:
      - ./services/airflow/dags:/opt/airflow/dags
      - ./services/airflow/logs:/opt/airflow/logs
      - ./services/airflow/plugins:/opt/airflow/plugins
      - ./weather_project:/opt/airflow/weather_project
      - /var/run/docker.sock:/var/run/docker.sock
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins}
        exec /entrypoint airflow version

